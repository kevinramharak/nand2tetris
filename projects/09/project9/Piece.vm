function Piece.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push pointer 0
return
function Piece.dispose 0
push argument 0
pop pointer 0
push constant 0
return
function Piece.setRowIndex 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function Piece.setColumnIndex 0
push argument 0
pop pointer 0
push argument 1
pop this 1
push constant 0
return
function Piece.getIsWhite 0
push argument 0
pop pointer 0
push this 2
return
function Piece.getType 0
push argument 0
pop pointer 0
push this 3
return
function Piece.setType 0
push argument 0
pop pointer 0
push argument 1
pop this 3
push constant 0
return
function Piece.draw 2
push argument 0
pop pointer 0
push argument 1
push this 0
push this 1
call Board.calculateOffset 3
pop local 0
push argument 1
push this 0
push this 1
call Board.calculateColor 3
pop local 1
push this 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
call Pawn.drawWhiteOnWhite 1
pop temp 0
label IF_FALSE2
push this 3
push constant 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
call Knight.drawWhiteOnWhite 1
pop temp 0
label IF_FALSE3
push this 3
push constant 3
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
call Bishop.drawWhiteOnWhite 1
pop temp 0
label IF_FALSE4
goto IF_END1
label IF_FALSE1
push this 3
push constant 1
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
call Pawn.drawWhiteOnBlack 1
pop temp 0
label IF_FALSE5
push this 3
push constant 2
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
call Knight.drawWhiteOnBlack 1
pop temp 0
label IF_FALSE6
push this 3
push constant 3
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
call Bishop.drawWhiteOnBlack 1
pop temp 0
label IF_FALSE7
label IF_END1
goto IF_END0
label IF_FALSE0
push local 1
push constant 0
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 3
push constant 1
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 0
call Pawn.drawBlackOnWhite 1
pop temp 0
label IF_FALSE9
push this 3
push constant 2
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 0
call Knight.drawBlackOnWhite 1
pop temp 0
label IF_FALSE10
push this 3
push constant 3
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 0
call Bishop.drawBlackOnWhite 1
pop temp 0
label IF_FALSE11
goto IF_END8
label IF_FALSE8
push this 3
push constant 1
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 0
call Pawn.drawBlackOnBlack 1
pop temp 0
label IF_FALSE12
push this 3
push constant 2
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push local 0
call Knight.drawBlackOnBlack 1
pop temp 0
label IF_FALSE13
push this 3
push constant 3
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push local 0
call Bishop.drawBlackOnBlack 1
pop temp 0
label IF_FALSE14
label IF_END8
label IF_END0
push constant 0
return
function Piece.canMoveTo 0
push argument 0
pop pointer 0
push this 3
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push argument 2
push argument 3
push argument 4
push this 0
push this 1
push this 2
call Pawn.canMoveTo 7
return
label IF_FALSE0
push this 3
push constant 3
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push argument 2
push argument 3
push argument 4
push this 0
push this 1
push this 2
call Bishop.canMoveTo 7
return
label IF_FALSE1
push constant 0
return
